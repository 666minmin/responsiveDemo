
viewport设置移动端自适应的方法：
<meta name="viewport" content="width=device-width, initial-scale=1.0">
根据网站的具体需求，还可以通过：user-scalable,maximum-scale,minimum-scale来设置网站是否可缩放，以及允许缩放最大最小值

media媒体查询设置移动端自适应的方法：
方法一：
<link rel="stylesheet" href="./mobile.css" media="screen and (max-width: 500px)">
方法二：
<style>
/*media 默认为计算机屏幕screen
*通过max-width/min-width来控制页面样式随着屏幕尺寸的变化而变化
*方法一：如果屏幕尺寸大小有交集，大范围的写在上面，小范围的写在下面
*方法二：确保屏幕尺寸大小没有交集
*/
@media(max-width:500px){}
</style>

rem是一种css的长度，它基于html的font-size。
我们可以通过js来控制，使其：（1rem）==(html的font-size)==(page的width)*k
ps:k为一数值，确保（html的font-size不要小于12px，不然css页面不起效果）
rem能够实现不同屏幕尺寸能够显示相同比例大小的元素。


```
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>我的页面</title>
    <link rel="stylesheet" href="./style.css">
    <link rel="stylesheet" href="./print.css" media="print">
    <link rel="stylesheet" href="./mobile.css" media="screen and (max-width: 500px)">
</head>
<body>
    <svg width="100%" height="400">
        <circle cx="200" cy="200" r="100" stroke="green" stroke-width="2" fill="#ffffff"/>
    </svg>
    <script src="./main.js"></script>
    <script src="./gbk.js" charset="GBK"></script>
</body>
</html>
```




